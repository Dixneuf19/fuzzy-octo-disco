# https://medium.com/google-cloud/continuous-delivery-in-a-microservice-infrastructure-with-google-container-engine-docker-and-fb9772e81da7

language: python
python:
    - "3.7-dev"

# Cache Gcloud SDK between commands
cache:
  directories:
    - "$HOME/google-cloud-sdk/"

services:
  - docker

env:
  global:
    - GOOGLE_APPLICATION_CREDENTIALS=~/gcloud-service-key.json
    - PROJECT_NAME=dixneuf19-gke
    - CLUSTER_NAME=standard-cluster-1
    - CLOUDSDK_COMPUTE_ZONE=europe-west1-d
    - DOCKER_IMAGE_NAME=find-faces
    - KUBE_DEPLOYMENT_NAME=find-faces

# safelist
branches:
  only:
  - master
  - service

before_install:
  - openssl aes-256-cbc -K $encrypted_60fe1e8baf8d_key -iv $encrypted_60fe1e8baf8d_iv -in client-secret.json.enc -out client-secret.json -d

# command to install dependencies
install:
  - pip install -r requirements.txt
# command to run tests
script:
  - pytest


before_deploy:
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
  - source /home/travis/google-cloud-sdk/path.bash.inc
  - gcloud --quiet version
  - gcloud --quiet components update
  - gcloud --quiet components update kubectl
  - gcloud auth activate-service-account --key-file client-secret.json
  - gcloud --quiet config set project $PROJECT_NAME
  - gcloud --quiet config set container/cluster $CLUSTER_NAME
  - gcloud --quiet config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
  - gcloud --quiet container clusters get-credentials $CLUSTER_NAME
  - gcloud auth configure-docker


deploy:
  - provider: script
    script: bash ./deploy.sh
    skip_cleanup: true
    on:
      branch: master